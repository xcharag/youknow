@implements IDisposable

@inject NavigationManager NavigationManager

<nav class="top-nav">
    <div class="container">
        <a class="navbar-brand" href="">youknow</a>

        <input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

        <div class="nav-items" onclick="document.querySelector('.navbar-toggler').click()">
            <NavLink href="/" Match="NavLinkMatch.All">
                <FluentIcon Value="@(new Icons.Filled.Size20.Home())" Color="Color.Lightweight" Style="margin-right: 5px"/>
                <FluentLabel Typo="Typography.H6" Color="Color.Lightweight">
                    Inicio
                </FluentLabel>
            </NavLink>

            <NavLink href="Editor">
                <FluentIcon Value="@(new Icons.Filled.Size20.WindowEdit())" Color="Color.Lightweight" Style="margin-right: 5px"/>
                <FluentLabel Typo="Typography.H6" Color="Color.Lightweight" Style="white-space: nowrap;">
                    Editor 3D
                </FluentLabel>
            </NavLink>

            <NavLink href="Community">
                <FluentIcon Value="@(new Icons.Filled.Size20.PeopleCommunity())" Color="Color.Lightweight" Style="margin-right: 5px"/>
                <FluentLabel Typo="Typography.H6" Color="Color.Lightweight">
                    Comunidad
                </FluentLabel>
            </NavLink>

            <FluentStack Orientation="Orientation.Horizontal" Style="align-items: center; justify-content: end">
                <AuthorizeView>
                    <Authorized>
                        <NavLink href="Account/Manage">
                            <FluentIcon Value="@(new Icons.Filled.Size20.PersonInfo())" Color="Color.Lightweight" Style="margin-right: 5px"/>
                            <FluentLabel Typo="Typography.H6">
                                @context.User.Identity?.Name
                            </FluentLabel>
                        </NavLink>
                        <form action="Account/Logout" method="post">
                            <AntiforgeryToken/>
                            <input type="hidden" name="ReturnUrl" value="@_currentUrl"/>
                            <button type="submit" class="nav-button">
                                <FluentIcon Value="@(new Icons.Filled.Size20.SignOut())" Color="Color.Warning" Style="margin-right: 5px"/>
                                <FluentLabel Typo="Typography.H6" Color="Color.Warning">
                                    Cerrar Sesión
                                </FluentLabel>
                            </button>
                        </form>
                    </Authorized>
                    <NotAuthorized>
                        <NavLink href="Account/Register">
                            <FluentIcon Value="@(new Icons.Filled.Size20.New())" Color="Color.Success" Style="margin-right: 5px"/>
                            <FluentLabel Typo="Typography.H6" Color="Color.Success">
                                Registrarse
                            </FluentLabel>
                        </NavLink>
                        <NavLink href="Account/Login">
                            <FluentIcon Value="@(new Icons.Filled.Size20.OpenFolder())" Color="Color.Accent" Style="margin-right: 5px"/>
                            <FluentLabel Typo="Typography.H6" Color="Color.Accent">
                                Iniciar Sesión
                            </FluentLabel>
                        </NavLink>
                    </NotAuthorized>
                </AuthorizeView>
            </FluentStack>

        </div>
    </div>
</nav>

@code {
    private string? _currentUrl;

    protected override void OnInitialized()
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        _currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }

}